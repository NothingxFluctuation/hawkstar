"""
Django settings for hawkstarnews project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wjz!+vefq02z(tyy-%q(*ei(+)j&37=cp+yo0+p+zb8#tr*oci'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost','127.0.0.1','http://x3dikn234.pythonanywhere.com']


# Application definition

INSTALLED_APPS = (
    'mainApp',
    'martor',
    'sorl.thumbnail',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'hawkstarnews.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'templates'),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hawkstarnews.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Global mortar settings

MARTOR_ENABLE_CONFIGS = {
    'imgur':'false',
    'mention':'false',
    'jquery':'true',
    'living':'false',
}

#to setup the martor editor with lable or not
MARTOR_ENABLE_LABEL = False

#Imgur API Keys
MARTOR_IMGUR_CLIENT_ID = '790a81abc32c756'
MARTOR_IMGUR_API_KEY = 'a929f2df11d63c9cf8cfa9bc6dcd7384e12c078e'

#sAFE mODE
MARTOR_MARKDOWN_SAFE_MODE = True

#markdownify
MARTOR_MARKDOWNIFY_FUNCTION = 'martor.utils.markdownify'
MARTOR_MARKDOWNIFY_URL = '/martor/markdownify/'

#Markdown extensions
MARTOR_MARKDOWN_EXTENSIONS = [
    'markdown.extensions.extra',
    'markdown.extensions.n12br',
    'markdown.extensions.smarty',
    'markdown.extensions.fenced_code',

    #custom markdown extensions
    'martor.extensions.urlize',
    'martor.extensions.del_ins',
    'martor.extensions.mention',
    'martor.extensions.emoji',
    'martor.extensions.mdx_video',
]

#Markdown Extensions cofigs
MARTOR_MARKDOWN_EXTENSION_CONFIGS = {}

#Markdown Urls
MARTOR_UPLOAD_URL ='/martor/uploader/' #default
MARTOR_SEARCH_USERS_URL = '/martor/search-user/' #default

#markdown extensions
MARTOR_MARKDOWN_BASE_EMOJI_URL = 'https://assets-cdn.github.com/images/icons/emoji/'
MARTOR_MARKDOWN_BASE_MENTION_URL = 'https://python.web.id/author/'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static'),
]


#media files
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media/')
